24b43787: abrogateProposal(uint256)
1e9d1e64: abrogationProposal_cancelVote(uint256)
9e70a234: abrogationProposal_castVote(uint256,bool)
8b787e30: abrogationProposals(uint256)
b0edbb9b: acceptanceThreshold()
0f15f4c0: activate()
3d05f009: activeDuration()
e0a8f6f5: cancelProposal(uint256)
bacbe2da: cancelVote(uint256)
15373e3d: castVote(uint256,bool)
fe0d94c1: execute(uint256)
e4e2d261: getAbrogationProposalReceipt(uint256,address)
328dd982: getActions(uint256)
45892155: getProposalParameters(uint256)
d0cd595e: getProposalQuorum(uint256)
e23a9a52: getReceipt(uint256,address)
c099f575: gracePeriodDuration()
c4d66de8: initialize(address)
22f3e2d4: isActive()
74cb3041: lastProposalId()
17977c61: latestProposalIds(address)
b5a127e5: minQuorum()
013cf08b: proposals(uint256)
490145c8: propose(address[],uint256[],string[],bytes[],string,string)
ddf0b009: queue(uint256)
2e8e34e1: queueDuration()
f2b06537: queuedTransactions(bytes32)
d1291f19: setAcceptanceThreshold(uint256)
24cd62d3: setActiveDuration(uint256)
342d067a: setGracePeriodDuration(uint256)
563909de: setMinQuorum(uint256)
53e5056a: setQueueDuration(uint256)
984690db: setWarmUpDuration(uint256)
39e778ee: startAbrogationProposal(uint256,string)
3e4f49e6: state(uint256)
5f2e9f60: warmUpDuration()
