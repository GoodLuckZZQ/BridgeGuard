f8326795: AmountLiquidityFee()
cfe0e619: AmountMarketingFee()
b677814c: AmountRewardsFee()
2e0f2625: DECIMALS()
7fb6df58: PCASHDividendReceiver()
ad64598a: _enableLiquidity()
d4057d7e: _enableSwap()
a715184d: _liquidityReciever()
4144d9e4: _marketingWalletAddress()
3eaaf86b: _totalSupply()
dd62ed3e: allowance(address,address)
095ea7b3: approve(address,uint256)
b62496f5: automatedMarketMakerPairs(address)
70a08231: balanceOf(address)
f11a24d3: buyLiquidityFee()
7bce5a04: buyMarketingFee()
77a3b609: buyRewardsFee()
d4399790: checkFeeExempt(address)
764d72bf: clearStuckBalance(address)
313ce567: decimals()
a457c2d7: decreaseAllowance(address,uint256)
180b0d7e: feeDenominator()
2b112e49: getCirculatingSupply()
39509351: increaseAllowance(address,uint256)
4355855a: isDividendExempt(address)
83b4ac68: isNotInSwap()
8f32d59b: isOwner()
51bc3c85: manualSwap()
753d02a1: manualSync()
06fdde03: name()
8da5cb5b: owner()
a8aa1b31: pair()
4d709adf: pairContract()
715018a6: renounceOwnership()
c6501c89: rescueDToken(address,address,uint256)
e5711e8b: rescueToken(address,address,uint256)
f887ea40: router()
f6374342: sellLiquidityFee()
92136913: sellMarketingFee()
bb8d5131: sellRewardsFee()
cfbac92f: setAutoAddLiquidity(bool)
4bc6dd18: setAutoSwapBack(bool)
ea8b2c44: setAutomaticPairMarket(address,bool)
25519cf2: setBuyFee(uint256,uint256,uint256)
2d48e896: setDistributionCriteria(uint256,uint256)
9d1944f5: setDistributorSettings(uint256)
a4b45c00: setFeeReceivers(address,address)
f708a64f: setIsDividendExempt(address,bool)
2f34d282: setLP(address)
320d4534: setMinSwapAmount(uint256)
1d865c30: setSellFee(uint256,uint256,uint256)
dde04b95: setWhitelistFee(address,bool)
e2f45605: swapTokensAtAmount()
95d89b41: symbol()
18160ddd: totalSupply()
a9059cbb: transfer(address,uint256)
23b872dd: transferFrom(address,address,uint256)
f2fde38b: transferOwnership(address)
