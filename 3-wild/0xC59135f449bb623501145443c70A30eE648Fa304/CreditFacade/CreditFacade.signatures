59781034: addCollateral(address,address,uint256)
e1f21c67: approve(address,address,uint256)
00842b57: approveAccountTransfer(address,bool)
dfd59465: calcCreditAccountHealthFactor(address)
c7de38a6: calcTotalValue(address)
5f73fbec: closeCreditAccount(address,uint256,bool,(address,bytes)[])
c12c21c0: creditManager()
2a7ba1f7: decreaseDebt(uint256)
9408b63f: degenNFT()
c690908a: enableToken(address)
b1836d32: expirable()
9b67ab30: getTotalBorrowedInBlock()
256ac915: hasOpenedCreditAccount(address)
2b7c7b11: increaseDebt(uint256)
f9eaee0d: isTokenAllowed(address)
6d19b486: isUpgradeableContract(address)
860aefcf: limits()
5d91a0e0: liquidateCreditAccount(address,address,uint256,bool,(address,bytes)[])
82871ace: liquidateExpiredCreditAccount(address,address,uint256,bool,(address,bytes)[])
caa5c23f: multicall((address,bytes)[])
6c8f225d: openCreditAccount(uint256,address,uint16,uint16)
7071b7c5: openCreditAccountMulticall(uint256,address,(address,bytes)[],uint16)
cff0ab96: params()
601d66f6: setCreditAccountLimits(uint128,uint128)
eb9606df: setExpirationDate(uint40)
ffd9b907: setIncreaseDebtForbidden(bool)
9c55a054: setLimitPerBlock(uint128)
6a03706f: setUpgradeable(address,bool)
5019e20a: transferAccountOwnership(address)
d9ccbec1: transfersAllowed(address,address)
6f307dc3: underlying()
9be0536a: upgradeableContractsList()
54fd4d50: version()
4f0e0ef3: wethAddress()
3d9287fa: whitelisted()
