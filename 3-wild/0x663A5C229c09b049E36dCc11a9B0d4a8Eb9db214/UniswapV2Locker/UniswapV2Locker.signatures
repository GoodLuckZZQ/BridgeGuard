90e1a003: gFees()
14dd79a3: getLockedTokenAtIndex(uint256)
783451e8: getNumLockedTokens()
1f2a1d2f: getNumLocksForToken(address)
d4ff493f: getUserLockForTokenAtIndex(address,address,uint256)
903df806: getUserLockedTokenAtIndex(address,uint256)
a3969815: getUserNumLockedTokens(address)
a69d9c4f: getUserNumLocksForToken(address,address)
b9863a44: getUserWhitelistStatus(address)
8c301df8: getWhitelistedUserAtIndex(uint256)
4bb18e3f: getWhitelistedUsersLength()
a9b07cea: incrementLock(address,uint256,uint256,uint256)
8af416f6: lockLPToken(address,uint256,uint256,address,bool,address)
ee424278: migrate(address,uint256,uint256,uint256)
8da5cb5b: owner()
60491d24: relock(address,uint256,uint256,uint256)
715018a6: renounceOwnership()
d477f05f: setDev(address)
86f6c3c1: setFees(uint256,uint256,uint256,uint256,uint256,uint256)
23cf3118: setMigrator(address)
f02c2643: setReferralTokenAndHold(address,uint256)
8931a4be: setSecondaryFeeToken(address)
582d5adc: splitLock(address,uint256,uint256,uint256)
ccebfa3f: tokenLocks(address,uint256)
bef497fd: transferLockOwnership(address,uint256,uint256,address)
f2fde38b: transferOwnership(address)
8bdb2afa: uniswapFactory()
91ff1eb1: whitelistFeeAccount(address,bool)
4532d776: withdraw(address,uint256,uint256,uint256)
